name: Uradhura

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      job:
        description: 'Deploy manually'
        required: true
        default: 'deploy'

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: ${{ github.event.repository.name }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DEPLOYMENT_HOST: ${{ secrets.DEPLOYMENT_HOST }}

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1

  #     - name: Install latest rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         default: true
  #         override: true

  #     - name: Build
  #       run: cargo build --all --release && strip target/release/$PROJECT_NAME

  # release:    
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       # if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           target/release/$PROJECT_NAME_amd64
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: add host key verification
        run: |
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan $DEPLOYMENT_HOST > ~/.ssh/known_hosts
      - name: create fake file
        run: mkdir -p target/release/ && touch target/release/$PROJECT_NAME && ls -la target/release/
      - name: test ssh
        run: |
          ssh -v
          ls -la ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts
          ssh $SSH_USER@$DEPLOYMENT_HOST "uptime"
      # - name: rsync binary
      #   run: rsync -a target/release/$PROJECT_NAME $SSH_USER@$DEPLOYMENT_HOST:/home/$SSH_USER/uradhura/
      # - name: check if file exist
      #   run: ssh $SSH_USER@$DEPLOYMENT_HOST "ls /home/$SSH_USER/uradhura/"
      # - name : restert uradhura.service
      #   run: ssh $SSH_USER@$DEPLOYMENT_HOST "systemctl --user restart uradhura.service"